---
source: tests/functions.rs
expression: bo.bindings
---
#![allow(non_snake_case, non_upper_case_globals, non_camel_case_types)]
#[link(name = "odbc32", kind = "raw-dylib")]
extern "system" {
    #[cfg(target_arch = "x86")]
    pub fn SQLBindCol(
        StatementHandle: *mut ::core::ffi::c_void,
        ColumnNumber: u16,
        TargetType: i16,
        TargetValue: *mut ::core::ffi::c_void,
        BufferLength: i32,
        StrLen_or_Ind: *mut i32,
    ) -> i16;
    #[cfg(any(target_arch = "x86_64", target_arch = "aarch64"))]
    pub fn SQLBindCol(
        StatementHandle: *mut ::core::ffi::c_void,
        ColumnNumber: u16,
        TargetType: i16,
        TargetValue: *mut ::core::ffi::c_void,
        BufferLength: i64,
        StrLen_or_Ind: *mut i64,
    ) -> i16;
}
#[link(name = "user32", kind = "raw-dylib")]
extern "system" {
    #[cfg(any(target_arch = "x86_64", target_arch = "aarch64"))]
    pub fn GetWindowLongPtrA(hWnd: HWND, nIndex: WINDOW_LONG_PTR_INDEX) -> isize;
    #[cfg(any(target_arch = "x86_64", target_arch = "aarch64"))]
    pub fn GetWindowLongPtrW(hWnd: HWND, nIndex: WINDOW_LONG_PTR_INDEX) -> isize;
}
pub type WINDOW_LONG_PTR_INDEX = i32;
pub type HWND = isize;

